@model IEnumerable<LotterySyndicate.Models.Transaction>
@using Newtonsoft.Json;
@using LotterySyndicate.Models;
@using System.Net;
@using System.IO;



@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("View all transactions", "ViewAll")

    Your potential winnings are:!!!!



</p>



<div class="col-md-6">
    <p>

    </p>
    <table class="table">
        <tr>
            <td>
                Total Tickets in Syndicate
            </td>
            <td>
                @ViewData["TotalTickets"]
            </td>
        </tr>
        <tr>
            <td>
                Total Spent
            </td>
            <td>
                @ViewData["TotalAmount"]
            </td>
        </tr>
        <tr>
            <td>
                First Prize
            </td>
            <td>
                @ViewData["FirstPrize"]
            </td>
        </tr>
    </table>

    
</div>

<div class="asterGraph col-md-6"></div>


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.UserEmail)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NumberOfTickets)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Amount)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
            {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserEmail)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberOfTickets)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.TransactionID }) |
                @Html.ActionLink("Details", "Details", new { id = item.TransactionID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.TransactionID })
            </td>
        </tr>
    }
</table>


<div class="col-md-5">
    <table class="table">
        @{
            <tr>
                <th>

                </th>
                <th>
                    Ticket Share (%)
                </th>
                <th>
                    Prize Share (£)
                </th>
            </tr>

            var url = "https://localhost:44327/api/webapi";
            string json = new WebClient().DownloadString(url);



            var data = JsonConvert.DeserializeObject<List<UniqueUsersTransactions>>(json);

            foreach (var item in data)
            {
                <tr>
                    <td>
                        @{
                            int indexAt = item.User.IndexOf('@');
                            int indexDot = item.User.IndexOf('.');
                            string name = item.User.Substring(0, indexDot) + " " + item.User.Substring((indexDot + 1), (indexAt - (indexDot + 1)));
                        }
                        @name
                    </td>
                    <td>
                        @{
                            var userAmountDividedByTotalAmount = (item.AmountCount / ViewBag.TotalAmount);
                            var percentageUserAmountDividedByTotalAmount = userAmountDividedByTotalAmount * 100;
                        }
                        @Math.Round(percentageUserAmountDividedByTotalAmount, 2)
                    </td>
                    <td>
                        @{
                            var prizeShare = userAmountDividedByTotalAmount * ViewBag.FirstPrize;
                        }
                        @Math.Round(prizeShare, 2)
                    </td>
                </tr>
                            }
        }
    </table>
</div>

<div class="col-md-1"></div>


<div class="ticketsPerUser d-inline-block col-md-6"></div>









<script src="https://d3js.org/d3.v3.min.js"></script>
<script src="https://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js"></script>

<script src="~/Scripts/ticketsPerUserGraph.js"></script>

<script>


    
    barChart();
    asterGraph();
    
</script>






